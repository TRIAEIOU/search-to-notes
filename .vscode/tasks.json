{
    "version": "2.0.0",
    "tasks": [
        {
            "label": "Create output dirs",
            "type": "shell",
            "command": "Write-host Creating output directories... ; md -Force ./bin, ./dist | Out-Null",
            "options": {
                "cwd": "${workspaceFolder}"
            },
            "presentation": {
                "echo": false,
                "reveal": "always",
                "focus": false,
                "panel": "shared",
                "showReuseMessage": true,
                "clear": false
            }
        },
        {
            "label": "Build clean",
            "type": "shell",
            "command": "Write-host Building clean... ; rm -ea 0 -R -Force ./dist/*, ./bin/*",
            "options": {
                "cwd": "${workspaceFolder}"
            },
            "presentation": {
                "echo": false,
                "reveal": "always",
                "focus": false,
                "panel": "shared",
                "showReuseMessage": true,
                "clear": false
            }
        },
        {
            "label": "Build TS",
            "type": "shell",
            "command": "Write-host Building TS... ; node_modules/.bin/rollup -c",
            "options": {
                "cwd": "${workspaceFolder}"
            },
            "dependsOn": [
                "Create output dirs"
            ],
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "shared",
                "showReuseMessage": true,
                "clear": false
            }
        },
        {
            "label": "Build PY",
            "type": "shell",
            "command": "Write-host Building PY... ; ls ./src/py/*.py | ? { -not (Test-Path ('./bin/' + $_.Name) -PathType Leaf) -or (Test-Path ('./bin/' + $_.Name) -OlderThan $_.LastWriteTime) } | % {$_.FullName} | cp -ea 0 -Force -Destination ./bin | Out-Null",
            "options": {
                "cwd": "${workspaceFolder}"
            },
            "dependsOn": [
                "Create output dirs"
            ],
            "presentation": {
                "echo": false,
                "reveal": "always",
                "focus": false,
                "panel": "shared",
                "showReuseMessage": true,
                "clear": false
            }
        },
        {
            "label": "Build config",
            "type": "shell",
            "command": "Write-host Building config... ; cp -ea 0 ./src/config/* ./bin | Out-Null",
            "options": {
                "cwd": "${workspaceFolder}"
            },
            "dependsOn": [
                "Create output dirs"
            ],
            "presentation": {
                "echo": false,
                "reveal": "always",
                "focus": false,
                "panel": "shared",
                "showReuseMessage": true,
                "clear": false
            }
        },
        {
            "label": "Build update",
            "type": "shell",
            "command": "Write-host Building update... ; rm -ea 0 -R -Force ./dist/*; rm -ea 0 -R -Force ./bin/__pycache__; Get-ChildItem -Path ./bin/*, ./README.md, ./LICENSE | Compress-Archive -ea 0 -Force -DestinationPath ./dist/update.zip; pandoc ./README.md -f markdown -o ./dist/update.txt -t ${env:CODEPATH}/Anki/addons/pandoc-anki-addon-writer/anki-addon.lua | Out-Null",
            "options": {
                "cwd": "${workspaceFolder}"
            },
            "dependsOn": [
                "Create output dirs"
            ],
            "presentation": {
                "echo": false,
                "reveal": "always",
                "focus": false,
                "panel": "shared",
                "showReuseMessage": true,
                "clear": false
            }
        },
        {
            "label": "Build all",
            "dependsOn": [
                "Build PY",
                "Build config",
                "Build update"
            ]
        }
    ]
}